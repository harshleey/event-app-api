// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  username        String
  email           String @unique
  avatar          String
  password        String
  createAt        DateTime @default(now())
  updatedAt       DateTime @updatedAt
  events          Events[]
  groups          Groups[]
  userGroups      UserGroups[]
  IntEvent        IntEvent[]
}

model Events {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String
  location       String
  start_date     DateTime
  start_time     DateTime
  end_date       DateTime
  end_time       DateTime
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  userId         String  @db.ObjectId
  user           User    @relation(fields: [userId], references: [id])
  intEvent       IntEvent[]
  groupEvents    groupEvents[]
}

model Groups {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  userId         String  @db.ObjectId
  user           User    @relation(fields: [userId], references: [id])
  UserGroups     UserGroups[]
  groupEvents    groupEvents[]
}

model UserGroups {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  userId         String  @db.ObjectId
  user           User    @relation(fields: [userId], references: [id])
  groupId        String  @db.ObjectId
  group          Groups  @relation(fields: [groupId], references: [id])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model IntEvent {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  userId         String  @db.ObjectId
  user           User    @relation(fields: [userId], references: [id])
  eventId        String  @db.ObjectId
  event          Events  @relation(fields: [eventId], references: [id])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model groupEvents {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  eventId        String  @db.ObjectId
  event          Events  @relation(fields: [eventId], references: [id])
  groupId        String  @db.ObjectId
  group          Groups  @relation(fields: [groupId], references: [id])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}